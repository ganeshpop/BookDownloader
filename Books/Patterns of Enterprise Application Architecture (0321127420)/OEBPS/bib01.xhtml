<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><h2 id="bib01"><span epub:type="pagebreak" id="page_511"/>References</h2>&#13;
<p class="noindent"><a id="biblio01"/><strong>[Alexander et al.]</strong><br/>Alexander, et al. <em>A Pattern Language</em>. Oxford, 1977.</p>&#13;
<p class="blockquoten1">An inspiration for many people in the patterns movement. I’m less enamored of it than most, but it’s worth looking at to understand an approach that so many draw so much from.</p>&#13;
<p class="noindent"><a id="biblio02"/><strong>[Alpert et al.]</strong><br/>Alpert, Brown and Woolf. <em>Design Patterns Smalltalk Companion</em>. Addison-Wesley, 1998.</p>&#13;
<p class="blockquoten1">Little known outside the Smalltalk community, this book expands and explains many of the classic patterns.</p>&#13;
<p class="noindent"><a id="biblio03"/><strong>[Alur et al.]</strong><br/>Alur, Crupi, and Malks. <em>Core J2EE Patterns: Best Practices and Design Strategies</em>. Prentice Hall, 2001.</p>&#13;
<p class="blockquoten1">One of the new wave of patterns books that put new life into the form. Although the patterns are expressed specifically for the J2EE platform, most also make sense in other places.</p>&#13;
<p class="noindent"><a id="biblio04"/><strong>[Ambler]</strong><br/><a href="http://www.ambysoft.com/mappingObjects.html">http://www.ambysoft.com/mappingObjects.html</a></p>&#13;
<p class="blockquoten1">A useful source of ideas on object-relational mapping.</p>&#13;
<p class="noindent"><a id="biblio05"/><strong>[Beck XP 2000]</strong><br/>Beck, <em>Extreme Programming Explained</em>. Addison-Wesley, 2000.</p>&#13;
<p class="blockquoten1">The manifesto for Extreme Programming. It should be read by anyone interested in software process.</p>&#13;
<p class="noindent"><a id="biblio06"/><span epub:type="pagebreak" id="page_512"/><strong>[Beck Patterns]</strong><br/>Beck. <em>Smalltalk Best Practice Patterns</em>. Prentice Hall, 1997.</p>&#13;
<p class="blockquoten1">Undeservedly little read because of its Smalltalk base. It has more good advice for other OO languages than most books that are specially written for them. The only downside is that you might realize how much we all miss by not programming in Smalltalk.</p>&#13;
<p class="noindent"><a id="biblio07"/><strong>[Beck TDD]</strong><br/>Beck. <em>Test-Driven Development: By Example</em>. Addison-Wesley, 2003.</p>&#13;
<p class="blockquoten1">Due to be out on the same day as this book. TDD is Kent’s guide to the tight cycle of testing and refactoring that can evolve a design.</p>&#13;
<p class="noindent"><a id="biblio08"/><strong>[Bernstein and Newcomer]</strong><br/>Bernstein and Newcomer. <em>Principles of Transaction Processing</em>. Morgan Kaufmann, 1997.</p>&#13;
<p class="blockquoten1">An excellent introduction to the head-hurting world of transactions.</p>&#13;
<p class="noindent"><a id="biblio09"/><strong>[Brown et al.]</strong><br/>Brown et al. <em>Enterprise Java Programming with IBM Websphere</em>. Addison-Wesley, 2001.</p>&#13;
<p class="blockquoten1">Although two-thirds of this book is a software manual, the other third packs more good design advice than do most entire books devoted to the subject.</p>&#13;
<p class="noindent"><a id="biblio10"/><strong>[Brown and Whitenack]</strong><br/><em><a href="http://members.aol.com/kgb1001001/Chasms.htm">http://members.aol.com/kgb1001001/Chasms.htm</a></em></p>&#13;
<p class="blockquoten1">One of the earliest, and best, papers on object-relational mapping.</p>&#13;
<p class="noindent"><a id="biblio11"/><strong>[Cockburn UC]</strong><br/>Cockburn. <em>Writing Effective Use Cases</em>. Addison-Wesley, 2001.</p>&#13;
<p class="blockquoten1">By far the best reference on use cases.</p>&#13;
<p class="noindent"><a id="biblio12"/><strong>[Cockburn PloP]</strong><br/>Cockburn, “Prioritizing Forces in Software Design,” in [<a href="#biblio32">PLoPD 2</a>].</p>&#13;
<p class="blockquoten1">A discussion of application boundaries.</p>&#13;
<p class="noindent"><a id="biblio13"/><span epub:type="pagebreak" id="page_513"/><strong>[Coleman et al.]</strong><br/>Coleman, Arnold, and Bodoff. <em>Object-Oriented Development: The Fusion Method, Second Edition</em>. Prentice Hall, 2001.</p>&#13;
<p class="blockquoten1">Although much of this pre-UML book is primarily of historic interest, its discussion of the interface model is very helpful to those designing a service layer.</p>&#13;
<p class="noindent"><a id="biblio14"/><strong>[Evans and Fowler]</strong><br/><em><a href="http://martinfowler.com/apsupp/spec.pdf">http://martinfowler.com/apsupp/spec.pdf</a></em></p>&#13;
<p class="blockquoten1">A discussion of the Specification pattern.</p>&#13;
<p class="noindent"><a id="biblio15"/><strong>[Evans]</strong><br/>Evans. <em>Domain Driven</em>. Addison Wesley, in preparation.</p>&#13;
<p class="blockquoten1">A book on developing domain models. Although I don’t usually like to reference books not yet published, the manuscript promises a fascinating discussion of an important and difficult aspect of enterprise application developments.</p>&#13;
<p class="noindent"><a id="biblio16"/><strong>[Fowler Temporal Patterns]</strong><br/><em><a href="http://martinfowler.com/ap2/timeNarrative.html">http://martinfowler.com/ap2/timeNarrative.html</a></em></p>&#13;
<p class="blockquoten1">Patterns dealing with object histories that change over time.</p>&#13;
<p class="noindent"><a id="biblio17"/><strong>[Fowler AP]</strong><br/>Fowler. <em>Analysis Patterns</em>. Addison-Wesley, 1997.</p>&#13;
<p class="blockquoten1">Domain model patterns.</p>&#13;
<p class="noindent"><a id="biblio18"/><strong>[Fowler Refactoring]</strong><br/>Fowler, <em>Refactoring</em>. Addison-Wesley, 1999.</p>&#13;
<p class="blockquoten1">A technique for improving the design of an existing code base.</p>&#13;
<p class="noindent"><a id="biblio19"/><strong>[Fowler CI]</strong><br/><em><a href="http://martinfowler.com/articles/continuousIntegration.html">http://martinfowler.com/articles/continuousIntegration.html</a></em></p>&#13;
<p class="blockquoten1">An essay that explains how to automatically build software several times a day.</p>&#13;
<p class="noindent"><a id="biblio20"/><span epub:type="pagebreak" id="page_514"/><strong>[Gang of Four]</strong><br/>Gamma, Helm, Johnson, and Vlissides. <em>Design Patterns</em>. Addison-Wesley, 1995.</p>&#13;
<p class="blockquoten1">The seminal book on patterns.</p>&#13;
<p class="noindent"><a id="biblio21"/><strong>[Hay]</strong><br/>Hay. <em>Data Model Patterns</em>. Dorset House, 1995.</p>&#13;
<p class="blockquoten1">Patterns of conceptual models from a relational perspective.</p>&#13;
<p class="noindent"><a id="biblio22"/><strong>[Jacobson et al.]</strong><br/>Jacobson et al. <em>Object-Oriented Software Engineering</em>. Addison-Wesley, 1992.</p>&#13;
<p class="blockquoten1">An early book on OO design; introduces use cases and the interface-controller-entity approach to design.</p>&#13;
<p class="noindent"><a id="biblio23"/><strong>[Keller and Coldewey]</strong><br/><em><a href="http://www.objectarchitects.de/ObjectArchitects/orpatterns/index.htm">http://www.objectarchitects.de/ObjectArchitects/orpatterns/index.htm</a></em></p>&#13;
<p class="blockquoten1">An excellent resource for object-relational mapping.</p>&#13;
<p class="noindent"><a id="biblio24"/><strong>[Kirtland]</strong><br/>Kirtland. <em>Designing Component-Based Applications</em>. Microsoft Press, 1998.</p>&#13;
<p class="blockquoten1">Description of the DNA architecture.</p>&#13;
<p class="noindent"><a id="biblio25"/><strong>[Knight and Dai]</strong><br/>Knight and Dai. “Objects and the Web.” <em>IEEE Software</em>, March/April 2002.</p>&#13;
<p class="blockquoten1">An excellent paper on model view controller, its evolution and use in Web applications.</p>&#13;
<p class="noindent"><a id="biblio26"/><strong>[Larman]</strong><br/>Larman. <em>Applying UML and Patterns, Second Edition</em>. Prentice Hall, 2001.</p>&#13;
<p class="blockquoten1">Currently my first-choice introduction to OO design.</p>&#13;
<p class="noindent"><a id="biblio27"/><strong>[Lea]</strong><br/>Lea. <em>Concurrent Programming in Java, Second Edition</em>. Addison-Wesley, 2000.</p>&#13;
<p class="blockquoten1">If you want to program with multiple threads, you need to understand this book first.</p>&#13;
<p class="noindent"><a id="biblio28"/><span epub:type="pagebreak" id="page_515"/><strong>[Marinescu]</strong><br/>Marinescu. <em>EJB Design Patterns</em>. New York: John Wiley, 2002.</p>&#13;
<p class="blockquoten1">Recent patterns book for Java’s EJB.</p>&#13;
<p class="noindent"><a id="biblio29"/><strong>[Martin and Odell]</strong><br/>Martin and Odell. <em>Object Oriented Methods: A Foundation (UML Edition)</em>. Prentice Hall, 1998.</p>&#13;
<p class="blockquoten1">Object modeling from a conceptual perspective, as well as investigation into the foundations of what modeling is about.</p>&#13;
<p class="noindent"><a id="biblio30"/><strong>[Nilsson]</strong><br/>Nilsson. <em>.NET Enterprise Design with Visual Basic .NET and SQL Server 2000</em>. Sams, 2002.</p>&#13;
<p class="blockquoten1">A solid book on architecture for the Microsoft platform.</p>&#13;
<p class="noindent"><a id="biblio31"/><strong>[Peckish]</strong><br/>two million (see <a href="ch05.xhtml#page_79">page 79</a>)</p>&#13;
<p class="noindent"><a id="biblio32"/><strong>[PLoPD 2]</strong><br/>Vlissides, Coplien, and Kerth (eds.). <em>Pattern Languages of Program Design 2</em>. Addison-Wesley, 1996.</p>&#13;
<p class="blockquoten1">Compendium of patterns papers.</p>&#13;
<p class="noindent"><a id="biblio33"/><strong>[PLoPD 3]</strong><br/>Martin, Buschmann, and Rielhe (eds.). <em>Pattern Languages of Program Design 3</em>. Addison-Wesley, 1998.</p>&#13;
<p class="blockquoten1">Compendium of patterns papers.</p>&#13;
<p class="noindent"><a id="biblio34"/><strong>[POSA]</strong><br/>Buschmann et al. <em>Pattern-Oriented Software Architecture</em>. Wiley, 2000.</p>&#13;
<p class="blockquoten1">The best book on broader architectural patterns.</p>&#13;
<p class="noindent"><a id="biblio35"/><strong>[Riehle et al.]</strong><br/>Riehle, Siberski, Baumer, Megert, and Zullighoven. “Serializer,” in [<a href="#biblio33">PLoPD 3</a>].</p>&#13;
<p class="blockquoten1">In-depth description of serialization of object structures, particularly when you need to serialize into different forms.</p>&#13;
<p class="noindent"><a id="biblio36"/><span epub:type="pagebreak" id="page_516"/><strong>[Schmidt]</strong><br/>Schmidt, Stal, Rohnert, and Buschmann. <em>Pattern-Oriented Software Architecture, Volume 2</em>. New York: John Wiley, 2000.</p>&#13;
<p class="blockquoten1">Patterns for concurrent and distributed systems. More for people who design application servers than for those who use application servers, but it’s good to have some knowledge of these ideas when you use the results.</p>&#13;
<p class="noindent"><a id="biblio37"/><strong>[Snodgrass]</strong><br/>Snodgrass. <em>Developing Time-Oriented Database Applications in SQL</em>. Morgan-Kaufmann, 1999.</p>&#13;
<p class="blockquoten1">How to deal with tracking historic information in relational databases.</p>&#13;
<p class="noindent"><a id="biblio38"/><strong>[Struts]</strong><br/><em><a href="http://jakarta.apache.org/struts/">http://jakarta.apache.org/struts/</a></em></p>&#13;
<p class="blockquoten1">A Web presentation framework for Java that’s growing in popularity.</p>&#13;
<p class="noindent"><a id="biblio39"/><strong>[Waldo et al.]</strong><br/>Waldo, Wyant, Wollrath, and Kendall. <em>A Note on Distributed Computing</em>. SMLI TR-94-29, <em><a href="http://research.sun.com/technical-reports/1994/smli_tr-94-29.pdf">http://research.sun.com/technical-reports/1994/smli_tr-94-29.pdf</a></em>, Sun Microsystems, 1994.</p>&#13;
<p class="blockquoten1">A classic paper on why “transparent distributed objects” is a dangerous oxymoron.</p>&#13;
<p class="noindent"><a id="biblio40"/><strong>[wiki]</strong><br/><em><a href="http://c2.com/cgi/wiki">http://c2.com/cgi/wiki</a></em></p>&#13;
<p class="blockquoten1">The original wiki web, developed by Ward Cunningham. A rambling but fascinating open Web site where all sorts of people share all sorts of ideas.</p>&#13;
<p class="noindent"><a id="biblio41"/><strong>[Woolf]</strong><br/>Woolf. “Null Object,” in [<a href="#biblio33">PLoPD 3</a>].</p>&#13;
<p class="blockquoten1">A description of the Null Object pattern.</p>&#13;
<p class="noindent"><a id="biblio42"/><strong>[Yoder]</strong><br/><em><a href="http://www.joeyoder.com/Research/objectmappings">http://www.joeyoder.com/Research/objectmappings</a></em></p>&#13;
<p class="blockquoten1">A good source of object-relational patterns.</p>&#13;
</div></body>
</html>