<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content" class="calibre"><div class="tocheadb">
    <h1 class="tochead" id="heading_id_2"><a id="pgfId-1015897"/>contents</h1>
  </div>

  <p class="tocchapters"><a id="pgfId-1015899"/><a href="../Text/fm.htm#pgfId-1015055">foreword</a></p>

  <p class="tocchapters"><a id="pgfId-1015901"/><a href="../Text/fm.htm#pgfId-1015059">preface</a></p>

  <p class="tocchapters"><a id="pgfId-1015903"/><a href="../Text/fm.htm#pgfId-1015064">acknowledgments</a></p>

  <p class="tocchapters"><a id="pgfId-1015905"/><a href="../Text/fm.htm#pgfId-1015072">about this book</a></p>

  <p class="tocchapters"><a id="pgfId-1015908"/><a href="../Text/fm.htm#pgfId-1015115">about the author</a></p>

  <p class="tocchapters"><a id="pgfId-1015910"/><a href="../Text/fm.htm#pgfId-1015118">about the cover illustration</a></p>

  <p class="tocparts">Part 1. <a id="pgfId-1015912"/><a href="../Text/p1.htm#pgfId-998407">Fundamentals of asynchronous programming with Vert.x</a></p>

  <p class="tocchapters">1 <a id="pgfId-1015914"/><a href="../Text/01.htm#pgfId-1042491">Vert.x, asynchronous programming, and reactive systems</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015916"/><a href="../Text/01.htm#pgfId-1011956">Being distributed and networked is the norm</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015918"/><a href="../Text/01.htm#pgfId-1011993">Not living on an isolated island</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015920"/><a href="../Text/01.htm#pgfId-1012172">There is no free lunch on the network</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015922"/><a href="../Text/01.htm#pgfId-1012228">The simplicity of blocking APIs</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015924"/><a href="../Text/01.htm#pgfId-1013016">Blocking APIs waste resources, increase costs</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015926"/><a href="../Text/01.htm#pgfId-1013233">Asynchronous programming with non-blocking I/O</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015928"/><a href="../Text/01.htm#pgfId-1014666">Multiplexing event-driven processing: The case of the event loop</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015930"/><a href="../Text/01.htm#pgfId-1015830">What is a reactive system?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015932"/><a href="../Text/01.htm#pgfId-1016150">What else does reactive mean?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015934"/><a href="../Text/01.htm#pgfId-1016368">What is Vert.x?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015936"/><a href="../Text/01.htm#pgfId-1016591">Your first Vert.x application</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015940"/><a href="../Text/01.htm#pgfId-1016643">Preparing the project</a></p>

  <p class="fm-head-2toc"><a href="../Text/01.htm#pgfId-1017020">The VertxEcho class</a></p>

  <p class="fm-head-2toc"><a href="../Text/01.htm#pgfId-1018027">The role of callbacks</a></p>

  <p class="fm-head-2toc"><a href="../Text/01.htm#pgfId-1018263">So is this a reactive application?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015943"/><a href="../Text/01.htm#pgfId-1021610">What are the alternatives to Vert.x?</a></p>

  <p class="tocchapters">2 <a id="pgfId-1015947"/><a href="../Text/02.htm#pgfId-1020310">Verticles: The basic processing units of Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015949"/><a href="../Text/02.htm#pgfId-1011918">Writing a verticle</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015951"/><a href="../Text/02.htm#pgfId-1011981">Preparing the project</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1012619">The verticle class</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1013188">Running and first observations</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015957"/><a href="../Text/02.htm#pgfId-1013805">More on verticles</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015960"/><a href="../Text/02.htm#pgfId-1013871">Blocking and the event loop</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1014351">Asynchronous notification of life-cycle events</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1015163">Deploying verticles</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1016321">Passing configuration data</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015964"/><a href="../Text/02.htm#pgfId-1016876">When code needs to block</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015967"/><a href="../Text/02.htm#pgfId-1016917">Worker verticles</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1017430">The executeBlocking operation</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015969"/><a href="../Text/02.htm#pgfId-1018134">So what is really in a verticle?</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015972"/><a href="../Text/02.htm#pgfId-1018156">Verticles and their environment</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1018340">More on contexts</a></p>

  <p class="fm-head-2toc"><a href="../Text/02.htm#pgfId-1019083">Bridging Vert.x and non-Vert.x threading models</a></p>

  <p class="tocchapters">3 <a id="pgfId-1015977"/><a href="../Text/03.htm#pgfId-1018146">Event bus: The backbone of a Vert.x application</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015979"/><a href="../Text/03.htm#pgfId-1011932">What is the event bus?</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015982"/><a href="../Text/03.htm#pgfId-1012051">Is the event bus just another message broker?</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1012244">Point-to-point messaging</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1012391">Request-reply messaging</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1012472">Publish/subscribe messaging</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015986"/><a href="../Text/03.htm#pgfId-1012575">The event bus in an example</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015990"/><a href="../Text/03.htm#pgfId-1012827">Heat sensor verticle</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1013328">Listener verticle</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1013714">Sensor data verticle</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1014115">HTTP server verticle</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1015834">Bootstrapping the application</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1015994"/><a href="../Text/03.htm#pgfId-1016081">Clustering and the distributed event bus</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1015997"/><a href="../Text/03.htm#pgfId-1016126">Clustering in Vert.x</a></p>

  <p class="fm-head-2toc"><a href="../Text/03.htm#pgfId-1016282">From event bus to distributed event bus</a></p>

  <p class="tocchapters">4 <a id="pgfId-1016001"/><a href="../Text/04.htm#pgfId-1022609">Asynchronous data and event streams</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016003"/><a href="../Text/04.htm#pgfId-1011954">Unified stream model</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016005"/><a href="../Text/04.htm#pgfId-1013549">What is back-pressure?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016007"/><a href="../Text/04.htm#pgfId-1014347">Making a music-streaming jukebox</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016010"/><a href="../Text/04.htm#pgfId-1014405">Features and usage</a></p>

  <p class="fm-head-2toc"><a href="../Text/04.htm#pgfId-1015117">HTTP processing: The big picture</a></p>

  <p class="fm-head-2toc"><a href="../Text/04.htm#pgfId-1015192">Jukebox verticle basics</a></p>

  <p class="fm-head-2toc"><a href="../Text/04.htm#pgfId-1016076">Incoming HTTP connections</a></p>

  <p class="fm-head-2toc"><a href="../Text/04.htm#pgfId-1016833">Downloading as efficiently as possible</a></p>

  <p class="fm-head-2toc"><a href="../Text/04.htm#pgfId-1017557">Reading MP3 files, but not too fast</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016016"/><a href="../Text/04.htm#pgfId-1018793">Parsing simple streams</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016018"/><a href="../Text/04.htm#pgfId-1019815">Parsing complex streams</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016020"/><a href="../Text/04.htm#pgfId-1021374">A quick note on the stream fetch mode</a></p>

  <p class="tocchapters">5 <a id="pgfId-1016024"/><a href="../Text/05.htm#pgfId-1035763">Beyond callbacks</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016026"/><a href="../Text/05.htm#pgfId-1011893">Composing asynchronous operations: The edge service example</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016030"/><a href="../Text/05.htm#pgfId-1011943">Scenario</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1012065">Heat sensor verticles</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1012580">Snapshot service verticle</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016032"/><a href="../Text/05.htm#pgfId-1012882">Callbacks</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016036"/><a href="../Text/05.htm#pgfId-1013129">Implementation</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1014171">Running</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1014825">The “callback hell” is not the problem</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016038"/><a href="../Text/05.htm#pgfId-1015327">Futures and promises</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016041"/><a href="../Text/05.htm#pgfId-1015471">Futures and promises in Vert.x</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1016338">Future-based APIs in Vert.x 4</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1016699">Interoperability with CompletionStage APIs</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1017612">Collector service with Vert.x futures</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016045"/><a href="../Text/05.htm#pgfId-1018580">Reactive extensions</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016048"/><a href="../Text/05.htm#pgfId-1018735">RxJava in a nutshell</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1020400">RxJava and Vert.x</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1020909">Collector service in RxJava</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016051"/><a href="../Text/05.htm#pgfId-1022426">Kotlin coroutines</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016054"/><a href="../Text/05.htm#pgfId-1022480">What is a coroutine?</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1023504">Vert.x and Kotlin coroutines</a></p>

  <p class="fm-head-2toc"><a href="../Text/05.htm#pgfId-1023935">Edge service with coroutines</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016057"/><a href="../Text/05.htm#pgfId-1024873">Which model should I use?</a></p>

  <p class="tocchapters">6 <a id="pgfId-1016061"/><a href="../Text/06.htm#pgfId-1018344">Beyond the event bus</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016063"/><a href="../Text/06.htm#pgfId-1011873">Revisiting heat sensors with a service API</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016065"/><a href="../Text/06.htm#pgfId-1012314">Return of the RPCs (remote procedure calls)</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016067"/><a href="../Text/06.htm#pgfId-1012618">Defining a service interface</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016069"/><a href="../Text/06.htm#pgfId-1013267">Service implementation</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016071"/><a href="../Text/06.htm#pgfId-1013671">Enabling proxy code generation</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016073"/><a href="../Text/06.htm#pgfId-1014071">Deploying event-bus services</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016075"/><a href="../Text/06.htm#pgfId-1014497">Service proxies beyond callbacks</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016077"/><a href="../Text/06.htm#pgfId-1015246">Testing and Vert.x</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016080"/><a href="../Text/06.htm#pgfId-1015360">Using JUnit 5 with Vert.x</a></p>

  <p class="fm-head-2toc"><a href="../Text/06.htm#pgfId-1016142">Testing DataVerticle</a></p>

  <p class="fm-head-2toc"><a href="../Text/06.htm#pgfId-1017570">Running the tests</a></p>

  <p class="tocparts"><a id="pgfId-1016085"/><a href="../Text/p2.htm#pgfId-1024853">Part 2 Developing reactive services with Vert.x</a></p>

  <p class="tocchapters">7 <a id="pgfId-1016087"/><a href="../Text/07.htm#pgfId-1022407">Designing a reactive application</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016089"/><a href="../Text/07.htm#pgfId-1011924">What makes an application reactive</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016091"/><a href="../Text/07.htm#pgfId-1012114">The 10k steps challenge scenario</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016093"/><a href="../Text/07.htm#pgfId-1012316">One application, many services</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016095"/><a href="../Text/07.htm#pgfId-1014398">Service specifications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016099"/><a href="../Text/07.htm#pgfId-1014461">User profile service</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1015172">Ingestion service</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1015559">Activity service</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1016168">Public API</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1016928">User web application</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1017027">Event stats service</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1017217">Congrats service</a></p>

  <p class="fm-head-2toc"><a href="../Text/07.htm#pgfId-1017327">Dashboard web application</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016106"/><a href="../Text/07.htm#pgfId-1017431">Running the application</a></p>

  <p class="tocchapters">8 <a id="pgfId-1016110"/><a href="../Text/08.htm#pgfId-1023346">The web stack</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016112"/><a href="../Text/08.htm#pgfId-1011929">Exposing a public API</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016115"/><a href="../Text/08.htm#pgfId-1012065">Routing HTTP requests</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1012900">Making HTTP requests</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016117"/><a href="../Text/08.htm#pgfId-1013860">Access control with JWT tokens</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016120"/><a href="../Text/08.htm#pgfId-1013930">Using JWT tokens</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1014660">What is in a JWT token?</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1015005">Handling JWT tokens with Vert.x</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1016245">Issuing JWT tokens with Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016124"/><a href="../Text/08.htm#pgfId-1017044">Cross-origin resource sharing (CORS)</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016127"/><a href="../Text/08.htm#pgfId-1017076">What is the problem?</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1017354">Supporting CORS with Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016129"/><a href="../Text/08.htm#pgfId-1017887">A modern web frontend</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016132"/><a href="../Text/08.htm#pgfId-1017930">Vue.js</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1018350">Vue.js application structure and build integration</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1019286">Backend integration illustrated</a></p>

  <p class="fm-head-2toc"><a href="../Text/08.htm#pgfId-1020385">Static content serving with Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016136"/><a href="../Text/08.htm#pgfId-1020697">Writing integration tests</a></p>

  <p class="tocchapters">9 <a id="pgfId-1016140"/><a href="../Text/09.htm#pgfId-1020816">Messaging and event streaming with Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016142"/><a href="../Text/09.htm#pgfId-1011899">Event-driven services beyond HTTP with Vert.x</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016145"/><a href="../Text/09.htm#pgfId-1011921">What Vert.x provides</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1012155">The middleware and services that we’ll use</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1012305">What is AMQP (and a message broker)?</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1012428">What is Kafka?</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016149"/><a href="../Text/09.htm#pgfId-1012644">Reliably ingesting messages over HTTP and AMQP</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016152"/><a href="../Text/09.htm#pgfId-1012702">Ingesting from AMQP</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1013824">Translating AMQP messages to Kafka records</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1014952">Ingesting from HTTP</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016155"/><a href="../Text/09.htm#pgfId-1015465">Sending congratulation emails</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016158"/><a href="../Text/09.htm#pgfId-1015536">Listening for daily step update events</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1016278">Sending emails</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016160"/><a href="../Text/09.htm#pgfId-1017595">Integration tests</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016163"/><a href="../Text/09.htm#pgfId-1017619">Ingestion testing</a></p>

  <p class="fm-head-2toc"><a href="../Text/09.htm#pgfId-1018909">Congratulation email testing</a></p>

  <p class="tocchapters">10 <a id="pgfId-1016167"/><a href="../Text/10.htm#pgfId-1027472">Persistent state management with databases</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016169"/><a href="../Text/10.htm#pgfId-1011898">Databases and Vert.x</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016172"/><a href="../Text/10.htm#pgfId-1011917">What the Eclipse Vert.x stack provides</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1012231">A note on data/object mapping, and why you may not always need it</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016174"/><a href="../Text/10.htm#pgfId-1013170">User profile service with MongoDB</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016177"/><a href="../Text/10.htm#pgfId-1013255">Data model</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1013642">User profile API verticle and initialization</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1014369">Validating user input</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1015150">Adding users in MongoDB</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1016666">Authenticating a user</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1017015">Fetching a user’s data</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1017688">Updating a user’s data</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016184"/><a href="../Text/10.htm#pgfId-1018106">Activity service with PostgreSQL</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016188"/><a href="../Text/10.htm#pgfId-1018215">Data model</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1021111">Opening a connection pool</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1021404">Life of a device update event</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1021851">Inserting a new record</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1022655">Generating a device’s daily activity update</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1023369">Activity API queries</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016193"/><a href="../Text/10.htm#pgfId-1023962">Integration tests</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016196"/><a href="../Text/10.htm#pgfId-1023986">Testing the user profile service</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1025099">Testing the activity service API</a></p>

  <p class="fm-head-2toc"><a href="../Text/10.htm#pgfId-1025797">Testing the activity service’s event handling</a></p>

  <p class="tocchapters">11 <a id="pgfId-1016201"/><a href="../Text/11.htm#pgfId-1023108">End-to-end real-time reactive event processing</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016203"/><a href="../Text/11.htm#pgfId-1011902">Advanced stream data processing with Kafka and RxJava</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016205"/><a href="../Text/11.htm#pgfId-1012002">Enriching daily device updates to generate user updates</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1013172">Computing device-update ingestion throughput using time-window aggregates</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1013778">Computing per-city trends using aggregation discriminants and time windows</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016209"/><a href="../Text/11.htm#pgfId-1014763">Real-time reactive web applications</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016212"/><a href="../Text/11.htm#pgfId-1014920">Forwarding Kafka records to the Vert.x event bus</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1015389">Bridging the event bus and web applications</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1018179">From Kafka to live web application updates</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016215"/><a href="../Text/11.htm#pgfId-1019353">Streams and state</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016218"/><a href="../Text/11.htm#pgfId-1019388">A stream of updates</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1019464">Hydrating the ranking state</a></p>

  <p class="fm-head-2toc"><a href="../Text/11.htm#pgfId-1020646">Periodically updating rankings from the updates stream</a></p>

  <p class="tocchapters">12 <a id="pgfId-1016223"/><a href="../Text/12.htm#pgfId-1025841">Toward responsiveness with load and chaos testing</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016225"/><a href="../Text/12.htm#pgfId-1011968">Initial experiments: Is the performance any good?</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016228"/><a href="../Text/12.htm#pgfId-1013672">Some considerations before load testing</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1013757">Simulating users with Locust</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1014561">Load testing the API with Hey</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016231"/><a href="../Text/12.htm#pgfId-1015580">Let’s do some chaos engineering</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016235"/><a href="../Text/fm.htm#pgfId-1015615">Test plan</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1015733">Chaos testing with Pumba</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1019390">We are not resilient (yet)</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016237"/><a href="../Text/12.htm#pgfId-1019502">From “scalable” to “scalable and resilient”</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016240"/><a href="../Text/12.htm#pgfId-1019527">Enforcing timeouts</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1019883">Using a circuit breaker</a></p>

  <p class="fm-head-2toc"><a href="../Text/12.htm#pgfId-1021332">Resiliency and fallback strategies</a></p>

  <p class="tocchapters">13 <a id="pgfId-1016245"/><a href="../Text/13.htm#pgfId-1120523">Final notes: Container-native Vert.x</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016247"/><a href="../Text/13.htm#pgfId-1012024">Heat sensors in a cloud</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016251"/><a href="../Text/13.htm#pgfId-1012173">Heat sensor service</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1012888">Sensor gateway</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1013337">Heat API</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1014596">Deploying to a local cluster</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016254"/><a href="../Text/13.htm#pgfId-1018804">Making the services work in Kubernetes</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016257"/><a href="../Text/13.htm#pgfId-1018848">Building container images</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1032736">Clustering and Kubernetes</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1033678">Kubernetes deployment and service resources</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016260"/><a href="../Text/13.htm#pgfId-1035801">First-class Kubernetes citizens</a></p>

  <p class="fm-head-2toc"><a id="pgfId-1016263"/><a href="../Text/13.htm#pgfId-1035853">Health checks</a></p>

  <p class="fm-head-2toc"><a href="../Text/13.htm#pgfId-1037810">Metrics</a></p>

  <p class="fm-head-1toc"><a id="pgfId-1016265"/><a href="../Text/13.htm#pgfId-1038650">The end of the beginning</a></p>

  <p class="tocchapters"/>

  <p class="tocchapters"><a id="pgfId-1016269"/><a href="../Text/index.htm#pgfId-1010277">index</a></p>
</div></body>
</html>