<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><div id="id0596006969_persistent_enumerated_types"><a id="persistent_enumerated_types"/><h2 id="title-ID0EERAG" class="docChapterTitle">6. Persistent Enumerated Types</h2><p class="docText">An <span class="docEmphasis">enumerated type</span> is a common and useful programming abstraction allowing a value to be selected from a fixed set <a id="idx-CHP-6-0227"/>of named choices. These were originally well represented in Pascal, but C took such a minimal approach (essentially just letting you assign symbolic names to inter-changeable integer values) that early Java releases reserved C's <tt>enum</tt> keyword but declined to implement it. A better, object-oriented approach known as the "typesafe enum pattern" evolved and was popularized in Joshua Bloch's <span class="docEmphasis">Effective Java Programming Language Guide</span> (Addison-Wesley). This approach requires a fair amount of boilerplate coding, but it lets you do all kinds of interesting and powerful things. The Java 1.5 specification resuscitates the <tt>enum</tt> keyword as an easy way to get the power of typesafe enumerations without all the tedious boilerplate coding, and it provides other nifty benefits.</p><blockquote><p class="docText"><span class="docEmphBoldItalic">In this chapter</span>:</p><ul><li><p class="docList"><span class="docEmphasis">Defining a Persistent Enumerated Type</span><a id="idx-CHP-6-0228"/></p></li><li><p class="docList"><span class="docEmphasis">Working with Persistent Enumerations</span></p></li></ul></blockquote><p class="docText">Regardless of how you implement an enumerated type, you're sometimes going to want to be able to persist such values to a database.</p></div></div></body>
</html>